{"version":3,"sources":["components/counter/Counter.module.css","components/counter/FeedbackOptions .jsx","components/counter/Statistics.jsx","components/counter/Notification.jsx","components/counter/Section.jsx","components/counter/Counter.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","incrementGood","incrementNeutral","incrementBad","type","className","styles","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","statisticsItem","defaultProps","Notification","message","Section","title","children","Counter","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,WAAa,4BAA4B,eAAiB,kC,8HCkBxGC,EAhBU,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,iBAAkBC,EAAkB,EAAlBA,aACxD,OACI,gCACI,wBAAQC,KAAK,SAASC,UAAWC,IAAOC,YAAaC,QAASP,EAA9D,kBACA,wBAAQG,KAAK,SAASC,UAAWC,IAAOC,YAAaC,QAASN,EAA9D,qBACA,wBAAQE,KAAK,SAASC,UAAWC,IAAOC,YAAaC,QAASL,EAA9D,qBCLNM,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,qBAAIT,UAAWC,IAAOS,WAAtB,UACI,qBAAIV,UAAWC,IAAOU,eAAtB,mBAA6CN,KAC7C,qBAAIL,UAAWC,IAAOU,eAAtB,sBAAgDL,KAChD,qBAAIN,UAAWC,IAAOU,eAAtB,kBAA4CJ,KAC5C,qBAAIP,UAAWC,IAAOU,eAAtB,oBAA8CH,KAC9C,qBAAIR,UAAWC,IAAOU,eAAtB,gCAA0DF,EAA1D,WAKZL,EAAWQ,aAAe,CACtBP,KAAM,EACNC,QAAS,EACTC,IAAK,GAWMH,QC3BTS,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,+BAAQA,KAGnBD,EAAaD,aAAe,CACxBE,QAAS,qBAOED,QCZTE,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MAILF,EAAQH,aAAe,CACrBI,MAAO,yBAOMD,QC2CAG,E,4MArDXC,MAAQ,CACJd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTX,cAAgB,WACZ,EAAKwB,UAAS,SAAAC,GAAS,MAAK,CAC3BhB,KAAMgB,EAAUhB,KAAO,O,EAI5BR,iBAAmB,WACf,EAAKuB,UAAS,SAAAC,GAAS,MAAK,CAC3Bf,QAASe,EAAUf,QAAU,O,EAIlCR,aAAe,WACX,EAAKsB,UAAS,SAAAC,GAAS,MAAK,CAC3Bd,IAAKc,EAAUd,IAAM,O,EAI1Be,mBAAqB,kBACjB,EAAKH,MAAMd,KAAO,EAAKc,MAAMb,QAAU,EAAKa,MAAMZ,K,EAGtDgB,gCAAkC,kBAC7B,EAAKJ,MAAMd,KAAO,EAAKiB,qBAAwB,K,4CAGpD,WACA,OACI,eAAC,EAAD,CAASN,MAAM,wBAAf,UACI,cAAC,EAAD,CACIpB,cAAe4B,KAAK5B,cACpBC,iBAAkB2B,KAAK3B,iBACvBC,aAAc0B,KAAK1B,eACvB,4CACC0B,KAAKF,sBAAwB,EAC1B,cAAC,EAAD,CAAcR,QAAQ,sBACpB,cAAC,EAAD,CACFT,KAAMmB,KAAKL,MAAMd,KACjBC,QAASkB,KAAKL,MAAMb,QACpBC,IAAKiB,KAAKL,MAAMZ,IAChBC,MAAOgB,KAAKF,qBACZb,mBAAoBe,KAAKD,2C,GAhDnBE,IAAMC,WCEbC,MANf,WACE,OACE,cAAC,EAAD,KCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c8f927dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"Counter_feedbackBtn__10487\",\"statistics\":\"Counter_statistics__3RUcR\",\"statisticsItem\":\"Counter_statisticsItem__2fVxV\"};","import styles from \"./Counter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions  = ({incrementGood, incrementNeutral, incrementBad}) => {\r\n    return (\r\n        <div>\r\n            <button type=\"button\" className={styles.feedbackBtn} onClick={incrementGood}>Good</button>\r\n            <button type=\"button\" className={styles.feedbackBtn} onClick={incrementNeutral}>Neutral</button>\r\n            <button type=\"button\" className={styles.feedbackBtn} onClick={incrementBad}>Bad</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    incrementGood: PropTypes.func.isRequired,\r\n    incrementNeutral: PropTypes.func.isRequired,\r\n    incrementBad: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions ","import styles from \"./Counter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (       \r\n        <ul className={styles.statistics}>\r\n            <li className={styles.statisticsItem}>Good: {good}</li>\r\n            <li className={styles.statisticsItem}>Neutral: {neutral}</li>\r\n            <li className={styles.statisticsItem}>Bad: {bad}</li>\r\n            <li className={styles.statisticsItem}>Total: {total}</li>\r\n            <li className={styles.statisticsItem}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>            \r\n    )\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return <span >{message}</span>\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: 'No feedback given'\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: \"Please leave feedback\"\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section","import React from \"react\";\r\nimport FeedbackOptions from \"./FeedbackOptions \";\r\nimport Statistics from \"./Statistics\";\r\nimport Notification from \"./Notification\";\r\nimport Section from \"./Section\";\r\n\r\nclass Counter extends React.Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }\r\n  \r\n    incrementGood = () => {\r\n        this.setState(prevState => ({\r\n         good: prevState.good + 1,\r\n        }));\r\n    };\r\n\r\n    incrementNeutral = () => {\r\n        this.setState(prevState => ({\r\n         neutral: prevState.neutral + 1,\r\n        }));\r\n    };\r\n\r\n    incrementBad = () => {\r\n        this.setState(prevState => ({\r\n         bad: prevState.bad + 1,\r\n        }));\r\n    };   \r\n\r\n    countTotalFeedback = () => (\r\n        this.state.good + this.state.neutral + this.state.bad       \r\n    );\r\n\r\n    countPositiveFeedbackPercentage = () => (\r\n        (this.state.good / this.countTotalFeedback()) * 100\r\n    )     \r\n   \r\n    render() {\r\n    return (\r\n        <Section title=\"Please leave feedback\">           \r\n            <FeedbackOptions\r\n                incrementGood={this.incrementGood}\r\n                incrementNeutral={this.incrementNeutral}\r\n                incrementBad={this.incrementBad} />\r\n            <h2>Statistics</h2>\r\n            {this.countTotalFeedback() <= 0 ?\r\n                <Notification message=\"No feedback given\" />\r\n                : <Statistics\r\n                good={this.state.good}\r\n                neutral={this.state.neutral}\r\n                bad={this.state.bad}\r\n                total={this.countTotalFeedback()}\r\n                positivePercentage={this.countPositiveFeedbackPercentage()}/>\r\n            }            \r\n        </Section>\r\n    )\r\n}}\r\n\r\nexport default Counter","import Counter from \"./components/counter/Counter\";\n\nfunction App() {\n  return (\n    <Counter />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}