{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions .jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","optionsArr","Object","keys","map","option","type","className","styles","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statistics","statisticsItem","defaultProps","Notification","message","Section","title","children","App","state","incrementHandler","setState","prevState","countTotalFeedback","values","reduce","acc","value","countPositiveFeedbackPercentage","data","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,eAAiB,qC,sICqBhEC,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAE1BC,EAAaC,OAAOC,KAAKJ,GAE/B,OAAQ,8BACHE,EAAWG,KAAI,SAAAC,GAAM,OAAK,wBACvBC,KAAK,SACLC,UAAWC,IAAOC,YAClBC,QAAS,kBAAMV,EAAgBK,IAHR,SAIzBA,GAHqBA,S,gBCNzBM,EAAa,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,mBAC5C,OACI,qBAAIT,UAAWC,IAAOS,WAAtB,UACI,qBAAIV,UAAWC,IAAOU,eAAtB,mBAA6CN,KAC7C,qBAAIL,UAAWC,IAAOU,eAAtB,sBAAgDL,KAChD,qBAAIN,UAAWC,IAAOU,eAAtB,kBAA4CJ,KAC5C,qBAAIP,UAAWC,IAAOU,eAAtB,oBAA8CH,KAC9C,qBAAIR,UAAWC,IAAOU,eAAtB,gCAA0DF,EAA1D,WAKZL,EAAWQ,aAAe,CACtBP,KAAM,EACNC,QAAS,EACTC,IAAK,GAWMH,QC3BTS,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAO,+BAAQA,KAGnBD,EAAaD,aAAe,CACxBE,QAAS,qBAOED,QCZTE,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,MAILF,EAAQH,aAAe,CACrBI,MAAO,yBAOMD,QCuCAG,E,4MAjDbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPa,iBAAmB,SAACtB,GAClB,EAAKuB,UAAS,SAAAC,GAAS,sBACnBxB,EAASwB,EAAWxB,GAAU,O,EAIpCyB,mBAAqB,WAKnB,OAJoB5B,OAAO6B,OAAO,EAAKL,OAEdM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAS/DC,gCAAkC,kBAC/B,EAAKT,MAAMd,KAAO,EAAKkB,qBAAwB,K,4CAGlD,WACE,IAAMM,EAAOC,KAAKX,MAElB,OACE,eAAC,EAAD,CAASH,MAAM,wBAAf,UACE,cAAC,EAAD,CACExB,QAASqC,EACTpC,gBAAiBqC,KAAKV,mBACxB,4CACCU,KAAKP,qBAAuB,EAAI,cAAC,EAAD,CAC7BlB,KAAMwB,EAAKxB,KACXC,QAASuB,EAAKvB,QACdC,IAAKsB,EAAKtB,IACVC,MAAOsB,KAAKP,qBACZd,mBAAoBqB,KAAKF,oCACzB,cAAC,EAAD,CAAcd,QAAQ,6B,GA5ChBiB,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BhD,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.2cbd35ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2C3bO\",\"statisticsItem\":\"Statistics_statisticsItem__2bR0I\"};","import styles from \"./FeedbackOptions.module.css\";\r\n// import PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\r\n    const optionsArr = Object.keys(options);\r\n\r\n    return (<div>\r\n        {optionsArr.map(option => (<button\r\n            type=\"button\" key={option}\r\n            className={styles.feedbackBtn}\r\n            onClick={() => onLeaveFeedback(option)}\r\n        >{option}</button>))}</div>\r\n    )\r\n}\r\n\r\n// FeedbackOptions.propTypes = {\r\n//     incrementGood: PropTypes.func.isRequired,\r\n//     incrementNeutral: PropTypes.func.isRequired,\r\n//     incrementBad: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default FeedbackOptions ","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => {\r\n    return (       \r\n        <ul className={styles.statistics}>\r\n            <li className={styles.statisticsItem}>Good: {good}</li>\r\n            <li className={styles.statisticsItem}>Neutral: {neutral}</li>\r\n            <li className={styles.statisticsItem}>Bad: {bad}</li>\r\n            <li className={styles.statisticsItem}>Total: {total}</li>\r\n            <li className={styles.statisticsItem}>Positive feedback: {positivePercentage}%</li>\r\n        </ul>            \r\n    )\r\n}\r\n\r\nStatistics.defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Statistics","import PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n    return <span >{message}</span>\r\n}\r\n\r\nNotification.defaultProps = {\r\n    message: 'No feedback given'\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Notification;","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: \"Please leave feedback\"\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Section","import React from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions \";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }  \n\n  incrementHandler = (option) => {\n    this.setState(prevState => (\n      {[option]: prevState.[option] + 1}\n    ));\n  };\n\n  countTotalFeedback = () => {\n    const stateValues = Object.values(this.state);\n\n    const summ = stateValues.reduce((acc, value) => acc + value, 0);\n    \n    return summ;\n  };\n\n  // countTotalFeedback = () => (\n  //   this.state.good + this.state.neutral + this.state.bad       \n  // );\n\n  countPositiveFeedbackPercentage = () => (\n    (this.state.good / this.countTotalFeedback()) * 100\n  )     \n   \n  render() {\n    const data = this.state;\n    \n    return (\n      <Section title=\"Please leave feedback\">        \n        <FeedbackOptions\n          options={data}\n          onLeaveFeedback={this.incrementHandler}/>\n        <h2>Statistics</h2>\n        {this.countTotalFeedback() > 0 ? <Statistics\n            good={data.good}\n            neutral={data.neutral}\n            bad={data.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}/>          \n          : <Notification message=\"No feedback given\" />           \n        }            \n      </Section>\n    )\n}}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1cRt1\"};"],"sourceRoot":""}